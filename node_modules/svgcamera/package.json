{
  "name": "svgcamera",
  "version": "0.2.0",
  "description": "A component that lets you add zooming and panning to your SVG-based app.",
  "main": "camera.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:jimkang/camera.git"
  },
  "keywords": [
    "camera",
    "svg"
  ],
  "author": {
    "name": "Jim Kang"
  },
  "license": "MIT",
  "readme": "camera\n======\n\nThis is a browser module that adds mouse/touch-driven zooming and panning to an SVG element. It adds a sets up a D3 zoom behavior and responds to the zoom event from it by setting the transform on the SVG group element appropriately.\n\nRequirements\n------------\nIt depends on D3 v3 and a SVG hierarchy that includes an <svg> element as well as a <g> element under it that contains everything you want to be subject to zoom and pan.\n\nInstallation\n------------\n\n    npm install svgcamera\n\nUsage\n-----\n\nHTML:\n\n    <svg id=\"board\" width=\"45%\" height=\"80%\">\n      <g id=\"zoomablelayer\"></g>\n    </svg>\n\nJavaScript:\n\n    // After the <svg> is done with any sizing, create the camera, setting the \n    // zoom in limit to 1 and zoom out limit to four times smaller than normal.\n    var camera = createCamera('#board', '#zoomablelayer', [0.25, 1]);\n\nNow the user can pan by clicking and dragging or zoom with the mouse wheel or pinch gestures.\n\nTo pan to an element (that uses the transform attribute for positioning):\n\n    camera.panToElement(d3.select('#the-target'), 750);\n\nSee also: [example/example.html](http://jimkang.com/camera/example/example.html).\n\nLicense\n-------\n\nMIT.\n",
  "readmeFilename": "README.md",
  "_id": "svgcamera@0.2.0",
  "_from": "svgcamera@0.2.0",
  "dist": {
    "shasum": "b9512360beee26471041cd89db9d9b5c0b985697"
  },
  "_resolved": "https://registry.npmjs.org/svgcamera/-/svgcamera-0.2.0.tgz"
}
